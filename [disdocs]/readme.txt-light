=JAD=
JAD — joint application development

Или по-русски: совместная разработка приложений.

В данном конкретном случае нам нужно организовать совместную разработку игр на QSP. Т.е. нам нужно подготовить инструменты, которые позволят другим авторам совместно разрабатывать игры и библиотечки для QSP. Несколько шагов я уже описал в MS ToDo, здесь чуть более подробно.

--Что нам нужно--

* В идеале нам нужен редактор, который на лету проверяет очевидные ошибки, из которого можно запустить игру прямо в плеере, и который будет работать с репозиторием на гитхабе.

	По-идее нам подходит VS Code, однако придётся лезть в код Псевдопода, перелопачивать его расширение и делать его таким, чтобы оно умело к подсветке синтаксиса ещё и запускать файлы и собирать из них игры и вообще много чего, что пока что выглядит сложным.

	Поэтому пока что мы остановимся на Sublime Text.

* Sublime Text позволяет даже мне, не особо шарящему в программировании, написать собственную подсветку синтаксиса, имеет выход на консоль и собственный Python-интерпретатор. Это значит, что теоретически можно написать скрипт, который можно запускать из Sublime, и который будет конвертить проект из разрозненных файлов в файл формата QSP, а то и в несколько файлов. Сам проект можно хранить, как исходники, в виде файлов формата txt2gam, и sublime merge позволяет в сочетании с sublime text сразу пушить проект в репозиторий.

Отсюда следует, что необходимо:

* Продумать, как будут выглядеть файлы (или файл) проекта QSP. У нас есть .qproj, представляющий собой XML, в котором хранится структура локаций-папок, однако нам это теперь не интересно, поскольку xml выглядит несколько громоздким для записи таких инструкций, как что и из чего собирать.

	* Рабочее название файла проекта: project.json
	* Этот файл должен лежать в корне проекта (возможно рядом с питоновским скриптом)
	* В этом файле должны указываться пути к файлам, из которых нужно собирать игру. Принцип изложен в файле example.json

* Изучить Python в достаточной мере, чтобы научить его собирать из разрозненных текстовых файлов файлы игр и запускать игру в плеере

* В идеале, написать плагин, который будет собирать игру из sublime text, но можно и научиться запускать python из sublime text

Как только всё это будет проделано:

* поправить подсветку синтаксиса QSP в sublime text. Особое внимание уделить комментариям
* Изложить принципы работы с таким проектом в виде отдельной инструкции и видеоролика:
	* sublime text
	* git
	* github
	* sublime merge

:ВНИМАНИЕ!!!
:Есть возможность забить BUILD на горячие клавиши. Этот BUILD может запускать BAT-файл, который будет запускать Python-Script с нужными параметрами, тот будет билдить нужные файлы, собирать их, затем вызывать приложение для конвертирования, которое будет конвертить в готовые QSP-файлы. Дальше или сам python-script, или bat-файл могут запускать плеер с указанным стартовым файлом.