(* Упрощёный синтаксис для BASE *)
(* TODO: переделать *)

(*
	В данном описании вместо конкретных значений используются регулярные выражения.
	Это нужно для упрощения описания отдельных моментов, например наборов символов.
	Учитывайте данное обстоятельство при чтении описания.

	В блоке BASE формата qsps (txt2gam) не допускаются пробелы перед именами ключевых
	операторов *PL, *P, ACT на верхнем уровне (BasePrint, BaseActions). Допускаются
	пробелы перед операторами во вложенных блоках кода, а так же между любыми сущностями.

	Сущности должны быть отделены друг от друга по границе слова, т.е. допустимо:
	*PL"string one"&*NL"string two"&!comment
*)

BaseCodeBlock = {BaseCodeLine, (NextLineSign | CodeEndSign)};
BaseCodeLine = BaseDirective, {DirectiveDelimiter, IgnoredText} | IgnoredText;
BaseDirective = BasePrint | BaseAction;

(* Base Directives *)
BasePrint = ["\*P" | "\*PL"], BaseOprtArgument;
BaseAction = "ACT", BaseOprtArgument, [ExpressionDelimiter, BaseOprtArgument],
			EmbeddingDelimiter, ManyLinesCode;
ManyLinesCode = [Comment], NextLineSign,
				[CodeBlock], BaseManyLinesCodeEnd, {IgnoredText}, NextLineSign;
EmbeddedCode = OneLineCode | ManyLinesCode;
OneLineCode = CodeLine, NextLineSign;

Comment = CommentOperator, AnyText, (NextLineSign | CodeEndSign);
Expression = Value {Operation, Value};
Value = Function, ["(", [Expression, {ExpressionDelimiter, Expression}], ")"] |
			"(", Expression, ")" |
			Variable | Number | TextString;
Directive = Operator, [Expression, {ExpressionDelimiter, Expression}],
			[EmbeddingDelimiter, EmbeddedCode] |
			Variable {ExpressionDelimiter, Variable}, AsignmentOperator,
			Expression, {ExpressionDelimiter, Expression} |
			Comment;


(* Операторы *)

Operator = "\*PL" | "\*P" | ImplicitOperator | "ACT" | "LOOP" | "IF";
CommentOperator = "!";
ManyLinesCodeEnd = "END";

(* Ограничители/Разделители *)

WordEdge = SpaceSign | "\b";
SpaceSign = "\s" | "\t";
NextLineSign = "\n" | "\r" | "\r\n";
DirectiveDelimiter = "\&";
ExpressionDelimiter = ",";
EmbeddingDelimiter = ":";
CodeEndSign = ? End of File ?;

(* Выражения и прочее *)

AnyText = {"[\s\S]+"};
Variable = "[^\W\d]\w*";
Number = "\d+";

AsignmentOperator = "=";
Operation = "\+" | "\-" | "\/" | "\*" | "or" | "and" | "mod" | ">=" | "<=" | ">" | "<" | "=";
ImplicitOperator = "(?=TextString)";

